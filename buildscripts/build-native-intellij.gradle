// Create a kotlin-jvm project that only brings in libs visible 
// from kotlin-native, to allow for completion of kotlin-native in intellij

project(':koma-backend-purekt') {
    apply plugin: 'kotlin'

    compileKotlin.dependsOn(':codegen')
    
    repositories {
        mavenCentral()
    }
    
    dependencies {
        compile project(":koma-core")
        compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    }
    
    sourceSets {
        main.kotlin.srcDirs = ['src', 'srcnative']
    }
}

project(':koma-core') {
    apply plugin: 'kotlin'
    
    repositories {
        mavenCentral()
    }
    
    dependencies {
        compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
        // If you want completion on the kotlinx.* symbols, put the Runtime.jar
        // from kotlin-native into koma/jars. After you run './gradlew build' once
        // the jar should be findable in ~/.konan
        compile files("../jars/Runtime.jar")
    }
    
    sourceSets {
        // kotlin-java wont understand if we give it srcnative (including the polyfills for java),
        // so we have to cherry pick the jvm code for polyfill, native code for everything else
        main.kotlin.srcDirs = ['src', 
                               'srcnative/koma/platformsupport', 
                               'srcjvm/koma/polyfill',
                               'external/js',
                               '../build/konan/interopStubs/genCInteropStubs',
                               '../build/konan/interopStubs/genMathInteropStubs'
        ]

    }
}

buildscript {
    ext.kotlin_version='1.1.2'

    repositories {
        mavenCentral()
        jcenter()
        maven {
            url  "https://dl.bintray.com/jetbrains/kotlin-native-dependencies"
        }
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}