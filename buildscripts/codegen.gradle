task codegen {
    doLast {
        ['Double', 'Float', 'Int', 'Long'].forEach { dtype ->
            copy {
                from 'golem-core/templates'
                into 'golem-core/srcgen/golem.matrix.default'
                include 'DefaultMatrix*.kt'
                rename { dtype + it }

                expand(div: getDiv(dtype), 
                        epow: getEPow(dtype),
                        dtype: dtype)
            }
            copy {
                from 'golem-core/templates'
                into 'golem-core/srcgen/golem.ndarray.default'
                include 'DefaultNDArray*.kt'
                rename { dtype + it }
                expand(dtype: dtype)
            }
        }
    }

}
def getDiv(dtype) {
    if (dtype != 'Int')
        return """
    override fun div(other: ${dtype}): Matrix<${dtype}>
            = this.mapMatIndexed { row, col, ele -> ele/other}
"""
    else
        return ""
}
def getEPow(dtype) {
    if (dtype != 'Int')
        return """
    override fun epow(other: ${dtype}): Matrix<${dtype}> 
            = this.mapMatIndexed { row, col, ele -> Math.pow(ele.toDouble(), other.toDouble()).to${dtype}() }
"""
    else
        return ""

}